// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  PENDING
  INCOMING 
  INPROGRESS
  COMPLETED
}

model User {
  id String @id @default(uuid())
  username String @unique
  email String @unique
  password String 
  profilePic String?
  timezone String
  resetCode String?
  resetCodeExpiry DateTime?
 
  calendarItems CalendarItem[]
  notifications Notification[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([resetCode])
}

model CalendarItem {
  id String @id @default(uuid())
  userId String 

  title String
  description String?
  startTime DateTime
  endTime DateTime
  isAllDay Boolean
  isHiglighted Boolean
  status Status

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Notification {
  id        String   @id @default(uuid())
  userId    String

  message   String
  isRead    Boolean  @default(false)
  sentAt    DateTime @default(now())
  readAt    DateTime?

  user      User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, isRead])
}

